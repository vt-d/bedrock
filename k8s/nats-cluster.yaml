---
apiVersion: v1
kind: Namespace
metadata:
  name: nats-system
---
apiVersion: v1
kind: Service
metadata:
  name: nats-cluster
  namespace: nats-system
  labels:
    app: nats
spec:
  selector:
    app: nats
  ports:
  - name: client
    port: 4222
    targetPort: 4222
  - name: cluster
    port: 6222
    targetPort: 6222
  - name: monitor
    port: 8222
    targetPort: 8222
---
apiVersion: v1
kind: Service
metadata:
  name: nats
  namespace: nats-system
  labels:
    app: nats
spec:
  clusterIP: None  # Headless service for StatefulSet
  selector:
    app: nats
  ports:
  - name: client
    port: 4222
    targetPort: 4222
  - name: cluster
    port: 6222
    targetPort: 6222
  - name: monitor
    port: 8222
    targetPort: 8222
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nats
  namespace: nats-system
  labels:
    app: nats
spec:
  serviceName: nats
  replicas: 3  # Production: 3 replicas for high availability
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
    spec:
      # Uncomment to require auth for nats requests
      # serviceAccountName: nats-server
      shareProcessNamespace: true
      terminationGracePeriodSeconds: 60
      containers:
      - name: nats
        image: nats:2.10-alpine
        ports:
        - containerPort: 4222
          name: client
        - containerPort: 6222
          name: cluster
        - containerPort: 8222
          name: monitor
        command:
         - "nats-server"
         - "--config"
         - "/etc/nats-config/nats.conf"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SERVER_NAME
          value: $(POD_NAME)
        - name: CLUSTER_ADVERTISE
          value: $(POD_NAME).nats.nats-system.svc.cluster.local:6222
        volumeMounts:
          - name: config-volume
            mountPath: /etc/nats-config
          - name: pid
            mountPath: /var/run/nats
          - name: nats-js-pvc
            mountPath: /data
        resources:
          requests:
            cpu: 500m      # Production: Increased CPU for better performance
            memory: 512Mi   # Production: Increased memory for better performance
          limits:
            cpu: 1000m     # Production: Higher CPU limit
            memory: 1Gi    # Production: Higher memory limit
        livenessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8222
          initialDelaySeconds: 10
          timeoutSeconds: 5
        lifecycle:
          preStop:
            exec:
              command:
              - "nats-server"
              - "-sl=ldm=/var/run/nats/nats.pid"
      volumes:
      - name: config-volume
        configMap:
          name: nats-config
      - name: pid
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: nats-js-pvc
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi  # Production: Increased storage for better performance
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-config
  namespace: nats-system
data:
  nats.conf: |
    pid_file: "/var/run/nats/nats.pid"
    http: 8222
    
    server_name: $SERVER_NAME
    
    jetstream {
        store_dir: "/data"
        max_memory_store: 512MB  # Production: Increased memory store
        max_file_store: 10GB     # Production: Increased file store
    }
    
    cluster {
        name: nats-cluster
        listen: 0.0.0.0:6222
        routes: [
          nats://nats-0.nats.nats-system.svc.cluster.local:6222
          nats://nats-1.nats.nats-system.svc.cluster.local:6222
          nats://nats-2.nats.nats-system.svc.cluster.local:6222
        ]
        cluster_advertise: $CLUSTER_ADVERTISE
        connect_retries: 30
    }